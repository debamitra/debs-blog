{"version":3,"file":"component---src-pages-using-typescript-tsx-7b5c7b9052afabb1eb6e.js","mappings":"kLAyBA,UAZwDA,IAAA,IAAC,KAAEC,EAAI,KAAEC,EAAI,SAAEC,GAAUH,EAAA,OAC/EI,EAAAA,cAACC,EAAAA,EAAM,CAACC,MAAM,mBAAmBH,SAAUA,GACzCC,EAAAA,cAACG,EAAAA,EAAG,CAACD,MAAM,qBACXF,EAAAA,cAAA,UAAI,0CACJA,EAAAA,cAAA,SAAG,4CAAyCA,EAAAA,cAAA,UAAI,YAAa,+DAA4DA,EAAAA,cAAA,UAAI,eAAgB,wEAC7IA,EAAAA,cAAA,SAAG,4CAAyCA,EAAAA,cAAA,UAAI,cAAe,oBAAiBA,EAAAA,cAAA,UAAI,cAAe,gBAAaA,EAAAA,cAAA,UAAI,aAAc,UAClIA,EAAAA,cAAA,SAAG,kCAA+BF,EAAK,wBAAsBD,EAAKO,KAAKC,UAAU,KACjFL,EAAAA,cAAA,SAAG,mCAAgCA,EAAAA,cAAA,KAAGM,KAAK,6CAA4C,kCAAkC,KACzHN,EAAAA,cAACO,EAAAA,KAAI,CAACC,GAAG,KAAI,2BACN,C,yDCVX,MAAML,EAAMP,IAAyC,IAAxC,YAAEa,EAAW,KAAEC,EAAI,KAAEC,EAAI,MAAET,GAAON,EAC7C,MAAM,KAAEQ,IAASQ,EAAAA,EAAAA,gBAAe,cAgB1BC,EAAkBJ,GAAeL,EAAKU,aAAaL,YAEzD,OACET,EAAAA,cAACe,EAAAA,EAAM,CACLC,eAAgB,CACdN,QAEFR,MAAOA,EACPe,cAAa,QAAUb,EAAKU,aAAaZ,MACzCS,KAAM,CACJ,CACEO,KAAK,cACLC,QAASN,GAEX,CACEO,SAAS,WACTD,QAASjB,GAEX,CACEkB,SAAS,iBACTD,QAASN,GAEX,CACEO,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASf,EAAKU,aAAaO,OAAOC,SAEpC,CACEJ,KAAK,gBACLC,QAASjB,GAEX,CACEgB,KAAK,sBACLC,QAASN,IAEXU,OAAOZ,IACT,EAINR,EAAIqB,aAAe,CACjBd,KAAK,KACLC,KAAM,GACNF,YAAY,IAUd,K","sources":["webpack://gatsby-starter-blog/./src/pages/using-typescript.tsx","webpack://gatsby-starter-blog/./src/components/seo.js"],"sourcesContent":["// If you don't want to use TypeScript you can delete this file!\nimport React from \"react\"\nimport { PageProps, Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\ntype DataProps = {\n  site: {\n    buildTime: string\n  }\n}\n\nconst UsingTypescript: React.FC<PageProps<DataProps>> = ({ data, path, location }) => (\n  <Layout title=\"Using TypeScript\" location={location}>\n    <SEO title=\"Using TypeScript\" />\n    <h1>Gatsby supports TypeScript by default!</h1>\n    <p>This means that you can create and write <em>.ts/.tsx</em> files for your pages, components etc. Please note that the <em>gatsby-*.js</em> files (like gatsby-node.js) currently don't support TypeScript yet.</p>\n    <p>For type checking you'll want to install <em>typescript</em> via npm and run <em>tsc --init</em> to create a <em>.tsconfig</em> file.</p>\n    <p>You're currently on the page \"{path}\" which was built on {data.site.buildTime}.</p>\n    <p>To learn more, head over to our <a href=\"https://www.gatsbyjs.org/docs/typescript/\">documentation about TypeScript</a>.</p>\n    <Link to=\"/\">Go back to the homepage</Link>\n  </Layout>\n)\n\nexport default UsingTypescript\n\nexport const query = graphql`\n  {\n    site {\n      buildTime(formatString: \"YYYY-MM-DD hh:mm a z\")\n    }\n  }\n`\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"names":["_ref","data","path","location","React","Layout","title","SEO","site","buildTime","href","Link","to","description","lang","meta","useStaticQuery","metaDescription","siteMetadata","Helmet","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps"],"sourceRoot":""}