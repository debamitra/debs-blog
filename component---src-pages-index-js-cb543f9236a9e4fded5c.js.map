{"version":3,"sources":["webpack:///./src/pages/index.js"],"names":["Search","props","htmlFor","id","type","value","search","onChange","onSearch","BlogIndex","data","location","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","React","useState","searchTerm","setSearchTerm","searchedStories","filter","story","console","log","node","frontmatter","toLowerCase","includes","event","target","map","fields","slug","timeToRead","key","style","marginBottom","rhythm","boxShadow","to","date","tags","length","dangerouslySetInnerHTML","__html","description","excerpt","pageQuery"],"mappings":"4FAAA,kJAyEMA,EAAS,SAAAC,GAEb,OACE,6BACA,2BAAOC,QAAQ,UAAf,YACE,2BAAOC,GAAG,SAASC,KAAK,OAAOC,MAAOJ,EAAMK,OAAQC,SAAUN,EAAMO,aAW3DC,UA/EG,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,KAAMC,EAAe,EAAfA,SAEnBC,EAAYF,EAAKG,KAAKC,aAAaC,MACnCC,EAAQN,EAAKO,kBAAkBC,MAHG,EAKFC,IAAMC,SAAS,IAA5CC,EAL+B,KAKnBC,EALmB,KAWhCC,EAAkBP,EAAMQ,QAAO,SAASC,GAG1C,OAFAC,QAAQC,IAAIF,EAAMG,KAAKC,YAAYd,OACnCW,QAAQC,IAAI,cAAcN,GACnBI,EAAMG,KAAKC,YAAYd,MAAMe,cAAcC,SAASV,EAAWS,kBAI5E,OAFEJ,QAAQC,IAAIJ,GAGZ,kBAAC,IAAD,CAAQZ,SAAUA,EAAUI,MAAOH,GACjC,kBAAC,IAAD,CAAKG,MAAM,eACX,kBAAC,IAAD,MACH,kBAACf,EAAD,CAAQM,OAAQe,EAAYb,SAfP,SAAAwB,GACpBV,EAAcU,EAAMC,OAAO5B,OAC3BqB,QAAQC,IAAI,kBAAoBK,EAAMC,OAAO5B,UAoB1CkB,EAAgBW,KAAI,YAAe,IAAZN,EAAW,EAAXA,KAClBb,EAAQa,EAAKC,YAAYd,OAASa,EAAKO,OAAOC,KAC9CC,EAAeT,EAAfS,WACJ,OACE,6BAASC,IAAKV,EAAKO,OAAOC,MACxB,gCACE,wBACEG,MAAO,CACLC,aAAcC,YAAO,EAAI,KAG3B,kBAAC,OAAD,CAAMF,MAAO,CAAEG,UAAU,QAAWC,GAAIf,EAAKO,OAAOC,MACjDrB,IAGL,+BAAQa,EAAKC,YAAYe,MAClC,oCAAeP,EAAf,SACCT,EAAKC,YAAYgB,MAAQjB,EAAKC,YAAYgB,KAAKC,OAAS,EAAxD,SACD,kBAAC,IAAD,KAAOlB,EAAKC,YAAYgB,OAEjB,iCACE,uBACEE,wBAAyB,CACvBC,OAAQpB,EAAKC,YAAYoB,aAAerB,EAAKsB,kBA6BxD,IAAMC,EAAS","file":"component---src-pages-index-js-cb543f9236a9e4fded5c.js","sourcesContent":["import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Bio from \"../components/bio\"\r\nimport Layout from \"../components/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport Tags from \"../components/tags\"\r\nimport { rhythm } from \"../utils/typography\"\r\n\r\n\r\nconst BlogIndex = ({ data, location }) => {\r\n\t\r\n  const siteTitle = data.site.siteMetadata.title\r\n  const posts = data.allMarkdownRemark.edges\r\n  \r\n    const [searchTerm, setSearchTerm] = React.useState('');\r\n\t  //call back handler/function\r\n\t  const handleSearch = event => {\r\n    setSearchTerm(event.target.value);\r\n    console.log('set search term' , event.target.value);\r\n\t  };\r\n    const searchedStories = posts.filter(function(story) {\r\n        console.log(story.node.frontmatter.title);\r\n        console.log('searchterm:',searchTerm)\r\n        return story.node.frontmatter.title.toLowerCase().includes(searchTerm.toLowerCase());\r\n    });\r\n    console.log(searchedStories);\r\n\r\n  return (\r\n    <Layout location={location} title={siteTitle}>\r\n      <SEO title=\"Deb's Blog\" />\r\n      <Bio />\r\n\t  <Search search={searchTerm} onSearch={handleSearch} />\r\n\r\n\t  \r\n\t  \r\n\t  \r\n\r\n\t  \r\n      {searchedStories.map(({ node }) => {\r\n      const title = node.frontmatter.title || node.fields.slug\r\n\t\t  const { timeToRead } = node\r\n        return (\r\n          <article key={node.fields.slug}>\r\n            <header>\r\n              <h3\r\n                style={{\r\n                  marginBottom: rhythm(1 / 4),\r\n                }}\r\n              >\r\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\r\n                  {title}\r\n                </Link>\r\n              </h3>\r\n              <small>{node.frontmatter.date}</small>\r\n\t\t\t  <small>&bull; {timeToRead} min.</small>\r\n\t\t\t  {node.frontmatter.tags && node.frontmatter.tags.length > 0 ? ` - ` : ``}\r\n\t\t\t  <Tags>{node.frontmatter.tags}</Tags>\r\n            </header>\r\n            <section>\r\n              <p\r\n                dangerouslySetInnerHTML={{\r\n                  __html: node.frontmatter.description || node.excerpt,\r\n                }}\r\n              />\r\n            </section>\r\n          </article>\r\n        )\r\n      })}\r\n    </Layout>\r\n  )\r\n}\r\n\r\nconst Search = props => {\r\n  \r\n  return (\r\n    <div>\r\n    <label htmlFor=\"search\">Search: </label>\r\n      <input id=\"search\" type=\"text\" value={props.search} onChange={props.onSearch}/>\r\n      </div>\r\n\r\n  );\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\nexport default BlogIndex\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n      }\r\n    }\r\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\r\n      edges {\r\n        node {\r\n\t\t  timeToRead\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            title\r\n            description\r\n\t\t\ttags\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n"],"sourceRoot":""}