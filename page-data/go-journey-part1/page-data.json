{"componentChunkName":"component---src-templates-blog-post-js","path":"/go-journey-part1/","result":{"data":{"site":{"siteMetadata":{"title":"Deb's Blog"}},"markdownRemark":{"id":"8b7a146e-212a-517b-aa44-a881080c6c24","excerpt":"Go is an open-source general-purpose programming language created by some Google folks sometime in the late 2000s. Okay, I think this introduction is vague…","html":"<p>Go is an open-source general-purpose programming language created by some Google folks sometime in the late 2000s. Okay, I think this introduction is vague enough to be sightly annoying and yet, good enough by my standards, now onwards with the planning of the itinerary.</p>\n<p>A person on discord says to me, “Tour of Go” is the first step to enlightenment, so of course I went and completed that one first. It was tedious in parts, adapting and learning new syntax but I finally hopped, skipped and jumped my way through it.</p>\n<ol>\n<li>\n<p><a href=\"https://tour.golang.org/welcome/1\">Tour of Go</a> -\r\nGained very basic familiarity with the syntax of Go, played around with Go code examples. Learnt basic concepts and implementations like maps and slices , pointers and interfaces,functions,closures and structs, goroutines and channels.</p>\n</li>\n<li>\n<p>Concurrency (Go) - Went through <a href=\"https://www.youtube.com/watch?v=gA4YXUJX7t8\">this</a> video to learn about concurrency concepts.</p>\n</li>\n<li>\n<p>Developer Envionment Setup - Downloaded and installed go from their <a href=\"https://golang.org/\">website</a>. Set up the IDE (I am using <a href=\"https://vscode.rocks/\">VS Code</a> ). Then installed Go extension for VS Code etc etc.</p>\n</li>\n<li>\n<p><a href=\"https://www.youtube.com/watch?v=Qtk9FFOoT5M\">Structuring Go apps</a> - This very useful talk covered the following principles and guidelines for structuring a Go app, generally speaking.</p>\n<ul>\n<li>A flat structure is what you can kind of default to in the beginning.</li>\n<li>Next we can try to break it up into <a href=\"https://www.callicoder.com/golang-packages/#:~:text=Go%20Package,following%20syntax%20%2D%20package\">packages</a>  this is called a layered architecture -> UI, Business logic, dependencies. But this has some problems.How do we share data between packages? Naming is difficult again. Circular dependencies happen, difficult to track.</li>\n<li>Lets try breaking up into modules</li>\n<li>Lets try grouping  by context (Domain driven Design)</li>\n<li>Hexagonal Architecture - Enables you to change a part of the application without changing everything else</li>\n<li>Ends with proposing that trying to design the project structure using either Domain-Driven-Design or Hexagonal architechture might be a good way to go.</li>\n</ul>\n</li>\n<li>\n<p>Follow the <strong>Go</strong> people on Twitter.(Important step)</p>\n</li>\n<li>\n<p><a href=\"https://quii.gitbook.io/learn-go-with-tests/\">Learn Go with Tests</a> - Learning through Test Driven development(TDD) is a great way to incorporate good coding practices early on. This is a terrific hands-on resource that I am currently going through. TDD is a good process for writing bug-free,high quality, maintainable, readable, and easy to refactor code in the long run.</p>\n</li>\n<li>\n<p>My next step is to build my first small project which is basically going to be a clone of <a href=\"https://news.ycombinator.com\">https://news.ycombinator.com</a></p>\n</li>\n</ol>\n<p>And, here’s a quote to make this post look prettier than it actually is</p>\n<blockquote>\n<p>“Because it’s not perfect, let’s not bother.”\r\nThat’s crazy! Even if we take three steps forward and two and a half back it’s still going</p>\n</blockquote>\n<p>half a foot forward.”</p>","frontmatter":{"title":"A project-based learning attempt at Go, Part-1","date":"August 18, 2020","description":"Learning a new pogramming language(Go) for fun and non-profit..","tags":["ramblings","go","golang"]},"timeToRead":2}},"pageContext":{"slug":"/go-journey-part1/","previous":{"fields":{"slug":"/java-to-golang/"},"frontmatter":{"title":"Why learn Go? (As a Java Backend Developer)","tags":["golang","go","tech"]}},"next":{"fields":{"slug":"/async-javascript/"},"frontmatter":{"title":"The Story of a Rejected Promise (As a Javascript Programmer)","tags":["javascript","promises","tech"]}}}},"staticQueryHashes":["2841359383","3584003949"],"slicesMap":{}}